<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="Erasmus Projects">
    <meta name="author" content="PPMG 'akad. Ivan Tsenov'">
    <title>Projects - Erasmus @ PPMG</title>
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico">
    <script src="https://use.fontawesome.com/releases/v6.3.0/js/all.js" crossorigin="anonymous"></script>
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,300,400,600,700" rel="stylesheet">
    <link href="css/styles.css" rel="stylesheet">
</head>
<body class="bg-gray">

    <!-- Load Navbar From /assets/partials/navbar -->
    <%- include('partials/navbar') %>

    <!-- Page Header -->
    <header class="bg-dark py-5">
        <div class="container px-4 px-lg-5 my-5">
            <div class="text-center text-white">
                <h1 class="display-4 fw-bolder">Erasmus Projects</h1>
                <p class="lead fw-normal text-white-50 mb-0">Explore all Erasmus initiatives at PPMG</p>
            </div>
        </div>
    </header>

    <!-- Search and Sort -->
    <section class="py-5">
        <div class="container px-4 px-lg-5">
            <div class="row mb-4">
                <div class="col-md-8">
                    <input id="searchInput" class="form-control" type="text" placeholder="Search projects...">
                </div>
                <div class="col-md-4">
                    <select id="sortOption" class="form-select">
                        <option value="year">Order by Year</option>
                        <option value="title">Order by Title</option>
                    </select>
                </div>
            </div>

            <!-- Active Filters Container (for filter badges) -->
            <div id="activeFilters" class="mb-3">
                <!-- Active filter badges will appear here -->
            </div>

            <!-- Projects Container -->
            <div id="projectsContainer" class="row gx-4 gx-lg-5" data-is-admin="<%= isAdmin %>">
                <!-- Projects will be dynamically loaded here -->
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="footer bg-black small text-center text-white-50">
        <div class="container px-4 px-lg-5">Copyright &copy; PPMG "akad. Ivan Tsenov" Erasmus 2024-2027</div>
    </footer>

    <!-- Bootstrap core JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Custom Projects Script -->
    <script src="js/scripts.js"></script>
    <script src="js/projectss.js"></script>

    <!-- Add this script tag right before the closing </body> tag in your projects.ejs -->
<script>
    console.log('üîß DEBUG SCRIPT STARTED');
    console.log('Document ready state:', document.readyState);
    
    // Test if basic elements exist
    function runDebugTests() {
        console.log('üß™ === RUNNING DEBUG TESTS ===');
        
        // Test 1: Check if elements exist
        const searchInput = document.getElementById('searchInput');
        const sortOption = document.getElementById('sortOption');
        const projectsContainer = document.getElementById('projectsContainer');
        
        console.log('üîç Element check:', {
            searchInput: !!searchInput,
            sortOption: !!sortOption,
            projectsContainer: !!projectsContainer
        });
        
        if (searchInput) {
            console.log('Search input found:', searchInput);
            console.log('Search input value:', searchInput.value);
        }
        
        if (sortOption) {
            console.log('Sort option found:', sortOption);
            console.log('Sort option value:', sortOption.value);
        }
        
        if (projectsContainer) {
            console.log('Projects container found:', projectsContainer);
            console.log('Projects container children:', projectsContainer.children.length);
        }
        
        // Test 2: Try to add a simple event listener
        if (searchInput) {
            console.log('üß™ Adding test event listener to search input...');
            searchInput.addEventListener('input', function(e) {
                console.log('üéØ TEST: Search input event fired!', e.target.value);
            });
        }
        
        // Test 3: Check if fetch works
        console.log('üß™ Testing fetch to /api/projects...');
        fetch('/api/projects')
            .then(response => {
                console.log('üì° Fetch response:', response.status, response.ok);
                return response.json();
            })
            .then(data => {
                console.log('üìä Fetched projects:', data.length, 'projects');
                console.log('First project:', data[0]);
            })
            .catch(error => {
                console.error('‚ùå Fetch error:', error);
            });
    }
    
    // Run tests when DOM is ready
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', function() {
            console.log('üìã DOMContentLoaded event fired');
            setTimeout(runDebugTests, 100);
        });
    } else {
        console.log('üìã DOM already ready');
        setTimeout(runDebugTests, 100);
    }
    
    // Also run tests after a delay to be sure
    setTimeout(function() {
        console.log('‚è∞ Running delayed debug tests...');
        runDebugTests();
    }, 2000);
    </script>
</body>
</html>
